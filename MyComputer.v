	
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module MyComputer(

	//////////// CLOCK //////////
	input 		          		CLOCK_50,
//	input 		          		CLOCK2_50,
//	input 		          		CLOCK3_50,
//	input 		          		CLOCK4_50,

	//////////// SEG7 //////////
	output		     [6:0]		HEX0,
	output		     [6:0]		HEX1,
	output		     [6:0]		HEX2,
	output		     [6:0]		HEX3,
	output		     [6:0]		HEX4,
	output		     [6:0]		HEX5,

	//////////// KEY //////////
	input 		     [3:0]		KEY,

	//////////// LED //////////
	output		     [9:0]		LEDR,

	//////////// SW //////////
	input 		     [9:0]		SW
);

//=======================================================
//  REG/WIRE declarations
//=======================================================
wire reset_d;
wire signed [7:0]dout;
wire dval;
wire [7:0]ip;

//=======================================================
//  Structural coding
//=======================================================
CPU cpu(.Clock(CLOCK_50), .GPO(LEDR[5:0]), .Debug(LEDR[9:6]), .Din(SW[7:0]), .Turbo(SW[8]), 
			.Sample(~KEY[3]), .Btns(~KEY[2:0]), .Reset(reset_d), .Dout(dout[7:0]), .Dval(dval), .IP(ip));
			
Debounce db(.clk(CLOCK_50), .in(SW[9]), .out(reset_d));

Disp2cNum dnum(.x(dout[7:0]), .H3(HEX3[6:0]),.H2(HEX2[6:0]),.H1(HEX1[6:0]),.H0(HEX0[6:0]), .enable(dval)); 

DispHex disph(.x(ip[7:0]), .H5(HEX5[6:0]), .H4(HEX4[6:0]));

endmodule
